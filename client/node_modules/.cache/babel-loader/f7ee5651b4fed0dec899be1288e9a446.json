{"ast":null,"code":"import _taggedTemplateLiteral from \"D:\\\\Projects\\\\Chat-Genius\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nimport _regeneratorRuntime from \"D:\\\\Projects\\\\Chat-Genius\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\Projects\\\\Chat-Genius\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"D:\\\\Projects\\\\Chat-Genius\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"D:\\\\Projects\\\\Chat-Genius\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"D:\\\\Projects\\\\Chat-Genius\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"D:\\\\Projects\\\\Chat-Genius\\\\client\\\\src\\\\pages\\\\Register.jsx\",\n    _templateObject;\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport styled from \"styled-components\";\nimport { useNavigate, Link } from \"react-router-dom\";\nimport Logo from \"../assets/logo.svg\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { registerRoute } from \"../utils/APIRoutes\";\nexport default function Register() {\n  var navigate = useNavigate();\n  var toastOptions = {\n    position: \"bottom-right\",\n    autoClose: 8000,\n    pauseOnHover: true,\n    draggable: true,\n    theme: \"dark\"\n  };\n\n  var _useState = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\"\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      values = _useState2[0],\n      setValues = _useState2[1];\n\n  useEffect(function () {\n    if (localStorage.getItem(process.env.REACT_APP_LOCALHOST_KEY)) {\n      navigate(\"/\");\n    }\n  }, []);\n\n  var handleChange = function handleChange(event) {\n    setValues(_objectSpread({}, values, _defineProperty({}, event.target.name, event.target.value)));\n  };\n\n  var handleValidation = function handleValidation() {\n    var password = values.password,\n        confirmPassword = values.confirmPassword,\n        username = values.username,\n        email = values.email;\n\n    if (password !== confirmPassword) {\n      toast.error(\"Password and confirm password should be same.\", toastOptions);\n      return false;\n    } else if (username.length < 3) {\n      toast.error(\"Username should be greater than 3 characters.\", toastOptions);\n      return false;\n    } else if (password.length < 8) {\n      toast.error(\"Password should be equal or greater than 8 characters.\", toastOptions);\n      return false;\n    } else if (email === \"\") {\n      toast.error(\"Email is required.\", toastOptions);\n      return false;\n    }\n\n    return true;\n  };\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n      var email, username, password, _yield$axios$post, data;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            event.preventDefault();\n\n            if (!handleValidation()) {\n              _context.next = 9;\n              break;\n            }\n\n            email = values.email, username = values.username, password = values.password;\n            _context.next = 5;\n            return axios.post(registerRoute, {\n              username: username,\n              email: email,\n              password: password\n            });\n\n          case 5:\n            _yield$axios$post = _context.sent;\n            data = _yield$axios$post.data;\n\n            if (data.status === false) {\n              toast.error(data.msg, toastOptions);\n            }\n\n            if (data.status === true) {\n              localStorage.setItem(process.env.REACT_APP_LOCALHOST_KEY, JSON.stringify(data.user));\n              navigate(\"/\");\n            }\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n\n    return function handleSubmit(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(FormContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    action: \"\",\n    onSubmit: function onSubmit(event) {\n      return handleSubmit(event);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"brand\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: Logo,\n    alt: \"logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, \"CHAT GENIUS\")), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Username\",\n    name: \"username\",\n    onChange: function onChange(e) {\n      return handleChange(e);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    placeholder: \"Email\",\n    name: \"email\",\n    onChange: function onChange(e) {\n      return handleChange(e);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    placeholder: \"Password\",\n    name: \"password\",\n    onChange: function onChange(e) {\n      return handleChange(e);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    placeholder: \"Confirm Password\",\n    name: \"confirmPassword\",\n    onChange: function onChange(e) {\n      return handleChange(e);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  }, \"Create User\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }\n  }, \"Already have an account ? \", /*#__PURE__*/React.createElement(Link, {\n    to: \"/login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 39\n    }\n  }, \"Login.\")))), /*#__PURE__*/React.createElement(ToastContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }\n  }));\n}\nvar FormContainer = styled.div(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  height: 100vh;\\n  width: 100vw;\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: center;\\n  gap: 1rem;\\n  align-items: center;\\n  background-color: #131324;\\n  .brand {\\n    display: flex;\\n    align-items: center;\\n    gap: 1rem;\\n    justify-content: center;\\n    img {\\n      height: 5rem;\\n    }\\n    h1 {\\n      color: white;\\n      text-transform: uppercase;\\n    }\\n  }\\n\\n  form {\\n    display: flex;\\n    flex-direction: column;\\n    gap: 2rem;\\n    background-color: #00000076;\\n    border-radius: 2rem;\\n    padding: 3rem 5rem;\\n  }\\n  input {\\n    background-color: transparent;\\n    padding: 1rem;\\n    border: 0.1rem solid #4e0eff;\\n    border-radius: 0.4rem;\\n    color: white;\\n    width: 100%;\\n    font-size: 1rem;\\n    &:focus {\\n      border: 0.1rem solid #997af0;\\n      outline: none;\\n    }\\n  }\\n  button {\\n    background-color: #4e0eff;\\n    color: white;\\n    padding: 1rem 2rem;\\n    border: none;\\n    font-weight: bold;\\n    cursor: pointer;\\n    border-radius: 0.4rem;\\n    font-size: 1rem;\\n    text-transform: uppercase;\\n    &:hover {\\n      background-color: #4e0eff;\\n    }\\n  }\\n  span {\\n    color: white;\\n    text-transform: uppercase;\\n    a {\\n      color: #4e0eff;\\n      text-decoration: none;\\n      font-weight: bold;\\n    }\\n  }\\n\"])));","map":{"version":3,"sources":["D:/Projects/Chat-Genius/client/src/pages/Register.jsx"],"names":["React","useState","useEffect","axios","styled","useNavigate","Link","ToastContainer","toast","registerRoute","Register","navigate","toastOptions","position","autoClose","pauseOnHover","draggable","theme","username","email","password","confirmPassword","values","setValues","localStorage","getItem","process","env","REACT_APP_LOCALHOST_KEY","handleChange","event","target","name","value","handleValidation","error","length","handleSubmit","preventDefault","post","data","status","msg","setItem","JSON","stringify","user","Logo","e","FormContainer","div"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport styled from \"styled-components\";\r\nimport { useNavigate, Link } from \"react-router-dom\";\r\nimport Logo from \"../assets/logo.svg\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { registerRoute } from \"../utils/APIRoutes\";\r\n\r\nexport default function Register() {\r\n  const navigate = useNavigate();\r\n  const toastOptions = {\r\n    position: \"bottom-right\",\r\n    autoClose: 8000,\r\n    pauseOnHover: true,\r\n    draggable: true,\r\n    theme: \"dark\",\r\n  };\r\n  const [values, setValues] = useState({\r\n    username: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (localStorage.getItem(process.env.REACT_APP_LOCALHOST_KEY)) {\r\n      navigate(\"/\");\r\n    }\r\n  }, []);\r\n\r\n  const handleChange = (event) => {\r\n    setValues({ ...values, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  const handleValidation = () => {\r\n    const { password, confirmPassword, username, email } = values;\r\n    if (password !== confirmPassword) {\r\n      toast.error(\r\n        \"Password and confirm password should be same.\",\r\n        toastOptions\r\n      );\r\n      return false;\r\n    } else if (username.length < 3) {\r\n      toast.error(\r\n        \"Username should be greater than 3 characters.\",\r\n        toastOptions\r\n      );\r\n      return false;\r\n    } else if (password.length < 8) {\r\n      toast.error(\r\n        \"Password should be equal or greater than 8 characters.\",\r\n        toastOptions\r\n      );\r\n      return false;\r\n    } else if (email === \"\") {\r\n      toast.error(\"Email is required.\", toastOptions);\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (handleValidation()) {\r\n      const { email, username, password } = values;\r\n      const { data } = await axios.post(registerRoute, {\r\n        username,\r\n        email,\r\n        password,\r\n      });\r\n\r\n      if (data.status === false) {\r\n        toast.error(data.msg, toastOptions);\r\n      }\r\n      if (data.status === true) {\r\n        localStorage.setItem(\r\n          process.env.REACT_APP_LOCALHOST_KEY,\r\n          JSON.stringify(data.user)\r\n        );\r\n        navigate(\"/\");\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <FormContainer>\r\n        <form action=\"\" onSubmit={(event) => handleSubmit(event)}>\r\n          <div className=\"brand\">\r\n            <img src={Logo} alt=\"logo\" />\r\n            <h1>CHAT GENIUS</h1>\r\n          </div>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Username\"\r\n            name=\"username\"\r\n            onChange={(e) => handleChange(e)}\r\n          />\r\n          <input\r\n            type=\"email\"\r\n            placeholder=\"Email\"\r\n            name=\"email\"\r\n            onChange={(e) => handleChange(e)}\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            name=\"password\"\r\n            onChange={(e) => handleChange(e)}\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Confirm Password\"\r\n            name=\"confirmPassword\"\r\n            onChange={(e) => handleChange(e)}\r\n          />\r\n          <button type=\"submit\">Create User</button>\r\n          <span>\r\n            Already have an account ? <Link to=\"/login\">Login.</Link>\r\n          </span>\r\n        </form>\r\n      </FormContainer>\r\n      <ToastContainer />\r\n    </>\r\n  );\r\n}\r\n\r\nconst FormContainer = styled.div`\r\n  height: 100vh;\r\n  width: 100vw;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  gap: 1rem;\r\n  align-items: center;\r\n  background-color: #131324;\r\n  .brand {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 1rem;\r\n    justify-content: center;\r\n    img {\r\n      height: 5rem;\r\n    }\r\n    h1 {\r\n      color: white;\r\n      text-transform: uppercase;\r\n    }\r\n  }\r\n\r\n  form {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 2rem;\r\n    background-color: #00000076;\r\n    border-radius: 2rem;\r\n    padding: 3rem 5rem;\r\n  }\r\n  input {\r\n    background-color: transparent;\r\n    padding: 1rem;\r\n    border: 0.1rem solid #4e0eff;\r\n    border-radius: 0.4rem;\r\n    color: white;\r\n    width: 100%;\r\n    font-size: 1rem;\r\n    &:focus {\r\n      border: 0.1rem solid #997af0;\r\n      outline: none;\r\n    }\r\n  }\r\n  button {\r\n    background-color: #4e0eff;\r\n    color: white;\r\n    padding: 1rem 2rem;\r\n    border: none;\r\n    font-weight: bold;\r\n    cursor: pointer;\r\n    border-radius: 0.4rem;\r\n    font-size: 1rem;\r\n    text-transform: uppercase;\r\n    &:hover {\r\n      background-color: #4e0eff;\r\n    }\r\n  }\r\n  span {\r\n    color: white;\r\n    text-transform: uppercase;\r\n    a {\r\n      color: #4e0eff;\r\n      text-decoration: none;\r\n      font-weight: bold;\r\n    }\r\n  }\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}