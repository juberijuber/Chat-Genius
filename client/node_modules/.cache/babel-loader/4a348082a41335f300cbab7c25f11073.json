{"ast":null,"code":"import _taggedTemplateLiteral from \"D:\\\\Projects\\\\Chat-Genius\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nimport _regeneratorRuntime from \"D:\\\\Projects\\\\Chat-Genius\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\Projects\\\\Chat-Genius\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"D:\\\\Projects\\\\Chat-Genius\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"D:\\\\Projects\\\\Chat-Genius\\\\client\\\\src\\\\components\\\\SetAvatar.jsx\",\n    _templateObject;\n\nimport React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport axios from \"axios\";\nimport { Buffer } from \"buffer\";\nimport loader from \"../assets/loader.gif\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport { setAvatarRoute } from \"../utils/APIRoutes\";\nexport default function SetAvatar() {\n  var _this = this;\n\n  var api = \"https://api.multiavatar.com/4645646\";\n  var navigate = useNavigate();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      avatars = _useState2[0],\n      setAvatars = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isLoading = _useState4[0],\n      setIsLoading = _useState4[1];\n\n  var _useState5 = useState(undefined),\n      _useState6 = _slicedToArray(_useState5, 2),\n      selectedAvatar = _useState6[0],\n      setSelectedAvatar = _useState6[1];\n\n  var toastOptions = {\n    position: \"bottom-right\",\n    autoClose: 8000,\n    pauseOnHover: true,\n    draggable: true,\n    theme: \"dark\"\n  };\n  useEffect( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          if (!localStorage.getItem(process.env.REACT_APP_LOCALHOST_KEY)) navigate(\"/login\");\n\n        case 1:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  })), []);\n\n  var setProfilePicture = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var user, _yield$axios$post, data;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            if (!(selectedAvatar === undefined)) {\n              _context2.next = 4;\n              break;\n            }\n\n            toast.error(\"Please select an avatar\", toastOptions);\n            _context2.next = 12;\n            break;\n\n          case 4:\n            _context2.next = 6;\n            return JSON.parse(localStorage.getItem(process.env.REACT_APP_LOCALHOST_KEY));\n\n          case 6:\n            user = _context2.sent;\n            _context2.next = 9;\n            return axios.post(\"\".concat(setAvatarRoute, \"/\").concat(user._id), {\n              image: avatars[selectedAvatar]\n            });\n\n          case 9:\n            _yield$axios$post = _context2.sent;\n            data = _yield$axios$post.data;\n\n            if (data.isSet) {\n              user.isAvatarImageSet = true;\n              user.avatarImage = data.image;\n              localStorage.setItem(process.env.REACT_APP_LOCALHOST_KEY, JSON.stringify(user));\n              navigate(\"/\");\n            } else {\n              toast.error(\"Error setting avatar. Please try again.\", toastOptions);\n            }\n\n          case 12:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2);\n    }));\n\n    return function setProfilePicture() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  useEffect( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n    var data, i, image, buffer;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) switch (_context3.prev = _context3.next) {\n        case 0:\n          data = [];\n          i = 0;\n\n        case 2:\n          if (!(i < 4)) {\n            _context3.next = 11;\n            break;\n          }\n\n          _context3.next = 5;\n          return axios.get(\"\".concat(api, \"/\").concat(Math.round(Math.random() * 1000)));\n\n        case 5:\n          image = _context3.sent;\n          buffer = new Buffer(image.data);\n          data.push(buffer.toString(\"base64\"));\n\n        case 8:\n          i++;\n          _context3.next = 2;\n          break;\n\n        case 11:\n          setAvatars(data);\n          setIsLoading(false);\n\n        case 13:\n        case \"end\":\n          return _context3.stop();\n      }\n    }, _callee3);\n  })), []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, isLoading ? /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: loader,\n    alt: \"loader\",\n    className: \"loader\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  })) : /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"title-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, \"Pick an Avatar as your profile picture\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"avatars\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }, avatars.map(function (avatar, index) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"avatar \".concat(selectedAvatar === index ? \"selected\" : \"\"),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: \"data:image/svg+xml;base64,\".concat(avatar),\n      alt: \"avatar\",\n      key: avatar,\n      onClick: function onClick() {\n        return setSelectedAvatar(index);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 19\n      }\n    }));\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: setProfilePicture,\n    className: \"submit-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }, \"Set as Profile Picture\"), /*#__PURE__*/React.createElement(ToastContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  })));\n}\nvar Container = styled.div(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  flex-direction: column;\\n  gap: 3rem;\\n  background-color: #131324;\\n  height: 100vh;\\n  width: 100vw;\\n\\n  .loader {\\n    max-inline-size: 100%;\\n  }\\n\\n  .title-container {\\n    h1 {\\n      color: white;\\n    }\\n  }\\n  .avatars {\\n    display: flex;\\n    gap: 2rem;\\n\\n    .avatar {\\n      border: 0.4rem solid transparent;\\n      padding: 0.4rem;\\n      border-radius: 5rem;\\n      display: flex;\\n      justify-content: center;\\n      align-items: center;\\n      transition: 0.5s ease-in-out;\\n      img {\\n        height: 6rem;\\n        transition: 0.5s ease-in-out;\\n      }\\n    }\\n    .selected {\\n      border: 0.4rem solid #4e0eff;\\n    }\\n  }\\n  .submit-btn {\\n    background-color: #4e0eff;\\n    color: white;\\n    padding: 1rem 2rem;\\n    border: none;\\n    font-weight: bold;\\n    cursor: pointer;\\n    border-radius: 0.4rem;\\n    font-size: 1rem;\\n    text-transform: uppercase;\\n    &:hover {\\n      background-color: #4e0eff;\\n    }\\n  }\\n\"])));","map":{"version":3,"sources":["D:/Projects/Chat-Genius/client/src/components/SetAvatar.jsx"],"names":["React","useEffect","useState","styled","axios","Buffer","loader","ToastContainer","toast","useNavigate","setAvatarRoute","SetAvatar","api","navigate","avatars","setAvatars","isLoading","setIsLoading","undefined","selectedAvatar","setSelectedAvatar","toastOptions","position","autoClose","pauseOnHover","draggable","theme","localStorage","getItem","process","env","REACT_APP_LOCALHOST_KEY","setProfilePicture","error","JSON","parse","user","post","_id","image","data","isSet","isAvatarImageSet","avatarImage","setItem","stringify","i","get","Math","round","random","buffer","push","toString","map","avatar","index","Container","div"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,cAAT,EAAyBC,KAAzB,QAAsC,gBAAtC;AACA,OAAO,uCAAP;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,cAAT,QAA+B,oBAA/B;AACA,eAAe,SAASC,SAAT,GAAqB;AAAA;;AAClC,MAAMC,GAAG,wCAAT;AACA,MAAMC,QAAQ,GAAGJ,WAAW,EAA5B;;AAFkC,kBAGJP,QAAQ,CAAC,EAAD,CAHJ;AAAA;AAAA,MAG3BY,OAH2B;AAAA,MAGlBC,UAHkB;;AAAA,mBAIAb,QAAQ,CAAC,IAAD,CAJR;AAAA;AAAA,MAI3Bc,SAJ2B;AAAA,MAIhBC,YAJgB;;AAAA,mBAKUf,QAAQ,CAACgB,SAAD,CALlB;AAAA;AAAA,MAK3BC,cAL2B;AAAA,MAKXC,iBALW;;AAMlC,MAAMC,YAAY,GAAG;AACnBC,IAAAA,QAAQ,EAAE,cADS;AAEnBC,IAAAA,SAAS,EAAE,IAFQ;AAGnBC,IAAAA,YAAY,EAAE,IAHK;AAInBC,IAAAA,SAAS,EAAE,IAJQ;AAKnBC,IAAAA,KAAK,EAAE;AALY,GAArB;AAQAzB,EAAAA,SAAS,wEAAC;AAAA;AAAA;AAAA;AACR,cAAI,CAAC0B,YAAY,CAACC,OAAb,CAAqBC,OAAO,CAACC,GAAR,CAAYC,uBAAjC,CAAL,EACElB,QAAQ,CAAC,QAAD,CAAR;;AAFM;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD,IAGN,EAHM,CAAT;;AAKA,MAAMmB,iBAAiB;AAAA,yEAAG;AAAA;;AAAA;AAAA;AAAA;AAAA,kBACpBb,cAAc,KAAKD,SADC;AAAA;AAAA;AAAA;;AAEtBV,YAAAA,KAAK,CAACyB,KAAN,CAAY,yBAAZ,EAAuCZ,YAAvC;AAFsB;AAAA;;AAAA;AAAA;AAAA,mBAIHa,IAAI,CAACC,KAAL,CACjBR,YAAY,CAACC,OAAb,CAAqBC,OAAO,CAACC,GAAR,CAAYC,uBAAjC,CADiB,CAJG;;AAAA;AAIhBK,YAAAA,IAJgB;AAAA;AAAA,mBAQChC,KAAK,CAACiC,IAAN,WAAc3B,cAAd,cAAgC0B,IAAI,CAACE,GAArC,GAA4C;AACjEC,cAAAA,KAAK,EAAEzB,OAAO,CAACK,cAAD;AADmD,aAA5C,CARD;;AAAA;AAAA;AAQdqB,YAAAA,IARc,qBAQdA,IARc;;AAYtB,gBAAIA,IAAI,CAACC,KAAT,EAAgB;AACdL,cAAAA,IAAI,CAACM,gBAAL,GAAwB,IAAxB;AACAN,cAAAA,IAAI,CAACO,WAAL,GAAmBH,IAAI,CAACD,KAAxB;AACAZ,cAAAA,YAAY,CAACiB,OAAb,CACEf,OAAO,CAACC,GAAR,CAAYC,uBADd,EAEEG,IAAI,CAACW,SAAL,CAAeT,IAAf,CAFF;AAIAvB,cAAAA,QAAQ,CAAC,GAAD,CAAR;AACD,aARD,MAQO;AACLL,cAAAA,KAAK,CAACyB,KAAN,CAAY,yCAAZ,EAAuDZ,YAAvD;AACD;;AAtBqB;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAjBW,iBAAiB;AAAA;AAAA;AAAA,KAAvB;;AA0BA/B,EAAAA,SAAS,wEAAC;AAAA;AAAA;AAAA;AAAA;AACFuC,UAAAA,IADE,GACK,EADL;AAECM,UAAAA,CAFD,GAEK,CAFL;;AAAA;AAAA,gBAEQA,CAAC,GAAG,CAFZ;AAAA;AAAA;AAAA;;AAAA;AAAA,iBAGc1C,KAAK,CAAC2C,GAAN,WACfnC,GADe,cACRoC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,IAA3B,CADQ,EAHd;;AAAA;AAGAX,UAAAA,KAHA;AAMAY,UAAAA,MANA,GAMS,IAAI9C,MAAJ,CAAWkC,KAAK,CAACC,IAAjB,CANT;AAONA,UAAAA,IAAI,CAACY,IAAL,CAAUD,MAAM,CAACE,QAAP,CAAgB,QAAhB,CAAV;;AAPM;AAEeP,UAAAA,CAAC,EAFhB;AAAA;AAAA;;AAAA;AASR/B,UAAAA,UAAU,CAACyB,IAAD,CAAV;AACAvB,UAAAA,YAAY,CAAC,KAAD,CAAZ;;AAVQ;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD,IAWN,EAXM,CAAT;AAYA,sBACE,0CACGD,SAAS,gBACR,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,GAAG,EAAEV,MAAV;AAAkB,IAAA,GAAG,EAAC,QAAtB;AAA+B,IAAA,SAAS,EAAC,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADQ,gBAKR,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAI,wCAAJ,CADF,CADF,eAIE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGQ,OAAO,CAACwC,GAAR,CAAY,UAACC,MAAD,EAASC,KAAT,EAAmB;AAC9B,wBACE;AACE,MAAA,SAAS,mBACPrC,cAAc,KAAKqC,KAAnB,GAA2B,UAA3B,GAAwC,EADjC,CADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAKE;AACE,MAAA,GAAG,sCAA+BD,MAA/B,CADL;AAEE,MAAA,GAAG,EAAC,QAFN;AAGE,MAAA,GAAG,EAAEA,MAHP;AAIE,MAAA,OAAO,EAAE;AAAA,eAAMnC,iBAAiB,CAACoC,KAAD,CAAvB;AAAA,OAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CADF;AAcD,GAfA,CADH,CAJF,eAsBE;AAAQ,IAAA,OAAO,EAAExB,iBAAjB;AAAoC,IAAA,SAAS,EAAC,YAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2D,wBAA3D,CAtBF,eAyBE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAzBF,CANJ,CADF;AAqCD;AAED,IAAMyB,SAAS,GAAGtD,MAAM,CAACuD,GAAV,2kCAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport axios from \"axios\";\r\nimport { Buffer } from \"buffer\";\r\nimport loader from \"../assets/loader.gif\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { setAvatarRoute } from \"../utils/APIRoutes\";\r\nexport default function SetAvatar() {\r\n  const api = `https://api.multiavatar.com/4645646`;\r\n  const navigate = useNavigate();\r\n  const [avatars, setAvatars] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [selectedAvatar, setSelectedAvatar] = useState(undefined);\r\n  const toastOptions = {\r\n    position: \"bottom-right\",\r\n    autoClose: 8000,\r\n    pauseOnHover: true,\r\n    draggable: true,\r\n    theme: \"dark\",\r\n  };\r\n\r\n  useEffect(async () => {\r\n    if (!localStorage.getItem(process.env.REACT_APP_LOCALHOST_KEY))\r\n      navigate(\"/login\");\r\n  }, []);\r\n\r\n  const setProfilePicture = async () => {\r\n    if (selectedAvatar === undefined) {\r\n      toast.error(\"Please select an avatar\", toastOptions);\r\n    } else {\r\n      const user = await JSON.parse(\r\n        localStorage.getItem(process.env.REACT_APP_LOCALHOST_KEY)\r\n      );\r\n\r\n      const { data } = await axios.post(`${setAvatarRoute}/${user._id}`, {\r\n        image: avatars[selectedAvatar],\r\n      });\r\n\r\n      if (data.isSet) {\r\n        user.isAvatarImageSet = true;\r\n        user.avatarImage = data.image;\r\n        localStorage.setItem(\r\n          process.env.REACT_APP_LOCALHOST_KEY,\r\n          JSON.stringify(user)\r\n        );\r\n        navigate(\"/\");\r\n      } else {\r\n        toast.error(\"Error setting avatar. Please try again.\", toastOptions);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(async () => {\r\n    const data = [];\r\n    for (let i = 0; i < 4; i++) {\r\n      const image = await axios.get(\r\n        `${api}/${Math.round(Math.random() * 1000)}`\r\n      );\r\n      const buffer = new Buffer(image.data);\r\n      data.push(buffer.toString(\"base64\"));\r\n    }\r\n    setAvatars(data);\r\n    setIsLoading(false);\r\n  }, []);\r\n  return (\r\n    <>\r\n      {isLoading ? (\r\n        <Container>\r\n          <img src={loader} alt=\"loader\" className=\"loader\" />\r\n        </Container>\r\n      ) : (\r\n        <Container>\r\n          <div className=\"title-container\">\r\n            <h1>Pick an Avatar as your profile picture</h1>\r\n          </div>\r\n          <div className=\"avatars\">\r\n            {avatars.map((avatar, index) => {\r\n              return (\r\n                <div\r\n                  className={`avatar ${\r\n                    selectedAvatar === index ? \"selected\" : \"\"\r\n                  }`}\r\n                >\r\n                  <img\r\n                    src={`data:image/svg+xml;base64,${avatar}`}\r\n                    alt=\"avatar\"\r\n                    key={avatar}\r\n                    onClick={() => setSelectedAvatar(index)}\r\n                  />\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n          <button onClick={setProfilePicture} className=\"submit-btn\">\r\n            Set as Profile Picture\r\n          </button>\r\n          <ToastContainer />\r\n        </Container>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  gap: 3rem;\r\n  background-color: #131324;\r\n  height: 100vh;\r\n  width: 100vw;\r\n\r\n  .loader {\r\n    max-inline-size: 100%;\r\n  }\r\n\r\n  .title-container {\r\n    h1 {\r\n      color: white;\r\n    }\r\n  }\r\n  .avatars {\r\n    display: flex;\r\n    gap: 2rem;\r\n\r\n    .avatar {\r\n      border: 0.4rem solid transparent;\r\n      padding: 0.4rem;\r\n      border-radius: 5rem;\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n      transition: 0.5s ease-in-out;\r\n      img {\r\n        height: 6rem;\r\n        transition: 0.5s ease-in-out;\r\n      }\r\n    }\r\n    .selected {\r\n      border: 0.4rem solid #4e0eff;\r\n    }\r\n  }\r\n  .submit-btn {\r\n    background-color: #4e0eff;\r\n    color: white;\r\n    padding: 1rem 2rem;\r\n    border: none;\r\n    font-weight: bold;\r\n    cursor: pointer;\r\n    border-radius: 0.4rem;\r\n    font-size: 1rem;\r\n    text-transform: uppercase;\r\n    &:hover {\r\n      background-color: #4e0eff;\r\n    }\r\n  }\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}