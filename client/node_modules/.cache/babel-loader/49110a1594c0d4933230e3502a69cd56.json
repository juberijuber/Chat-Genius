{"ast":null,"code":"import _taggedTemplateLiteral from \"D:\\\\Projects\\\\Chat-Genius\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nimport _regeneratorRuntime from \"D:\\\\Projects\\\\Chat-Genius\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\Projects\\\\Chat-Genius\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"D:\\\\Projects\\\\Chat-Genius\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"D:\\\\Projects\\\\Chat-Genius\\\\client\\\\src\\\\components\\\\Contacts.jsx\",\n    _templateObject;\n\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Logo from \"../assets/logo.svg\";\nexport default function Contacts(_ref) {\n  var _this = this;\n\n  var contacts = _ref.contacts,\n      changeChat = _ref.changeChat;\n\n  var _useState = useState(undefined),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentUserName = _useState2[0],\n      setCurrentUserName = _useState2[1];\n\n  var _useState3 = useState(undefined),\n      _useState4 = _slicedToArray(_useState3, 2),\n      currentUserImage = _useState4[0],\n      setCurrentUserImage = _useState4[1];\n\n  var _useState5 = useState(undefined),\n      _useState6 = _slicedToArray(_useState5, 2),\n      currentSelected = _useState6[0],\n      setCurrentSelected = _useState6[1];\n\n  useEffect( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var data;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return JSON.parse(localStorage.getItem(process.env.REACT_APP_LOCALHOST_KEY));\n\n        case 2:\n          data = _context.sent;\n          setCurrentUserName(data.username);\n          setCurrentUserImage(data.avatarImage);\n\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  })), []);\n\n  var changeCurrentChat = function changeCurrentChat(index, contact) {\n    setCurrentSelected(index);\n    changeChat(contact);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, currentUserImage && currentUserImage && /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"brand\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: Logo,\n    alt: \"logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, \"CHAT GENIUS\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"contacts\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }, contacts.map(function (contact, index) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: contact._id,\n      className: \"contact \".concat(index === currentSelected ? \"selected\" : \"\"),\n      onClick: function onClick() {\n        return changeCurrentChat(index, contact);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"avatar\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: \"data:image/svg+xml;base64,\".concat(contact.avatarImage),\n      alt: \"\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"username\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }\n    }, contact.username)));\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"current-user\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"avatar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"data:image/svg+xml;base64,\".concat(currentUserImage),\n    alt: \"avatar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 15\n    }\n  }, currentUserName)))));\n}\nvar Container = styled.div(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  display: grid;\\n  grid-template-rows: 10% 75% 15%;\\n  overflow: hidden;\\n  background-color: #080420;\\n  .brand {\\n    display: flex;\\n    align-items: center;\\n    gap: 1rem;\\n    justify-content: center;\\n    img {\\n      height: 2rem;\\n    }\\n    h3 {\\n      color: white;\\n      text-transform: uppercase;\\n    }\\n  }\\n  .contacts {\\n    display: flex;\\n    flex-direction: column;\\n    align-items: center;\\n    overflow: auto;\\n    gap: 0.8rem;\\n    &::-webkit-scrollbar {\\n      width: 0.2rem;\\n      &-thumb {\\n        background-color: #ffffff39;\\n        width: 0.1rem;\\n        border-radius: 1rem;\\n      }\\n    }\\n    .contact {\\n      background-color: #ffffff34;\\n      min-height: 5rem;\\n      cursor: pointer;\\n      width: 90%;\\n      border-radius: 0.2rem;\\n      padding: 0.4rem;\\n      display: flex;\\n      gap: 1rem;\\n      align-items: center;\\n      transition: 0.5s ease-in-out;\\n      .avatar {\\n        img {\\n          height: 3rem;\\n        }\\n      }\\n      .username {\\n        h3 {\\n          color: white;\\n        }\\n      }\\n    }\\n    .selected {\\n      background-color: #9a86f3;\\n    }\\n  }\\n\\n  .current-user {\\n    background-color: #0d0d30;\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n    gap: 2rem;\\n    .avatar {\\n      img {\\n        height: 4rem;\\n        max-inline-size: 100%;\\n      }\\n    }\\n    .username {\\n      h2 {\\n        color: white;\\n      }\\n    }\\n    @media screen and (min-width: 720px) and (max-width: 1080px) {\\n      gap: 0.5rem;\\n      .username {\\n        h2 {\\n          font-size: 1rem;\\n        }\\n      }\\n    }\\n  }\\n\"])));","map":{"version":3,"sources":["D:/Projects/Chat-Genius/client/src/components/Contacts.jsx"],"names":["React","useState","useEffect","styled","Contacts","contacts","changeChat","undefined","currentUserName","setCurrentUserName","currentUserImage","setCurrentUserImage","currentSelected","setCurrentSelected","JSON","parse","localStorage","getItem","process","env","REACT_APP_LOCALHOST_KEY","data","username","avatarImage","changeCurrentChat","index","contact","Logo","map","_id","Container","div"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Logo from \"../assets/logo.svg\";\r\n\r\nexport default function Contacts({ contacts, changeChat }) {\r\n  const [currentUserName, setCurrentUserName] = useState(undefined);\r\n  const [currentUserImage, setCurrentUserImage] = useState(undefined);\r\n  const [currentSelected, setCurrentSelected] = useState(undefined);\r\n  useEffect(async () => {\r\n    const data = await JSON.parse(\r\n      localStorage.getItem(process.env.REACT_APP_LOCALHOST_KEY)\r\n    );\r\n    setCurrentUserName(data.username);\r\n    setCurrentUserImage(data.avatarImage);\r\n  }, []);\r\n  const changeCurrentChat = (index, contact) => {\r\n    setCurrentSelected(index);\r\n    changeChat(contact);\r\n  };\r\n  return (\r\n    <>\r\n      {currentUserImage && currentUserImage && (\r\n        <Container>\r\n          <div className=\"brand\">\r\n            <img src={Logo} alt=\"logo\" />\r\n            <h3>CHAT GENIUS</h3>\r\n          </div>\r\n          <div className=\"contacts\">\r\n            {contacts.map((contact, index) => {\r\n              return (\r\n                <div\r\n                  key={contact._id}\r\n                  className={`contact ${\r\n                    index === currentSelected ? \"selected\" : \"\"\r\n                  }`}\r\n                  onClick={() => changeCurrentChat(index, contact)}\r\n                >\r\n                  <div className=\"avatar\">\r\n                    <img\r\n                      src={`data:image/svg+xml;base64,${contact.avatarImage}`}\r\n                      alt=\"\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"username\">\r\n                    <h3>{contact.username}</h3>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n          <div className=\"current-user\">\r\n            <div className=\"avatar\">\r\n              <img\r\n                src={`data:image/svg+xml;base64,${currentUserImage}`}\r\n                alt=\"avatar\"\r\n              />\r\n            </div>\r\n            <div className=\"username\">\r\n              <h2>{currentUserName}</h2>\r\n            </div>\r\n          </div>\r\n        </Container>\r\n      )}\r\n    </>\r\n  );\r\n}\r\nconst Container = styled.div`\r\n  display: grid;\r\n  grid-template-rows: 10% 75% 15%;\r\n  overflow: hidden;\r\n  background-color: #080420;\r\n  .brand {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 1rem;\r\n    justify-content: center;\r\n    img {\r\n      height: 2rem;\r\n    }\r\n    h3 {\r\n      color: white;\r\n      text-transform: uppercase;\r\n    }\r\n  }\r\n  .contacts {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    overflow: auto;\r\n    gap: 0.8rem;\r\n    &::-webkit-scrollbar {\r\n      width: 0.2rem;\r\n      &-thumb {\r\n        background-color: #ffffff39;\r\n        width: 0.1rem;\r\n        border-radius: 1rem;\r\n      }\r\n    }\r\n    .contact {\r\n      background-color: #ffffff34;\r\n      min-height: 5rem;\r\n      cursor: pointer;\r\n      width: 90%;\r\n      border-radius: 0.2rem;\r\n      padding: 0.4rem;\r\n      display: flex;\r\n      gap: 1rem;\r\n      align-items: center;\r\n      transition: 0.5s ease-in-out;\r\n      .avatar {\r\n        img {\r\n          height: 3rem;\r\n        }\r\n      }\r\n      .username {\r\n        h3 {\r\n          color: white;\r\n        }\r\n      }\r\n    }\r\n    .selected {\r\n      background-color: #9a86f3;\r\n    }\r\n  }\r\n\r\n  .current-user {\r\n    background-color: #0d0d30;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    gap: 2rem;\r\n    .avatar {\r\n      img {\r\n        height: 4rem;\r\n        max-inline-size: 100%;\r\n      }\r\n    }\r\n    .username {\r\n      h2 {\r\n        color: white;\r\n      }\r\n    }\r\n    @media screen and (min-width: 720px) and (max-width: 1080px) {\r\n      gap: 0.5rem;\r\n      .username {\r\n        h2 {\r\n          font-size: 1rem;\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}