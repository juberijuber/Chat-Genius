{"ast":null,"code":"import _taggedTemplateLiteral from \"D:\\\\Projects\\\\chat-genius-React\\\\public\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nimport _slicedToArray from \"D:\\\\Projects\\\\chat-genius-React\\\\public\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"D:\\\\Projects\\\\chat-genius-React\\\\public\\\\src\\\\components\\\\ChatInput.jsx\",\n    _templateObject;\n\nimport React, { useState } from \"react\";\nimport { BsEmojiSmileFill } from \"react-icons/bs\";\nimport { FaPencilAlt } from 'react-icons/fa';\nimport { FaBook } from \"react-icons/fa\";\nimport { FaExpandArrowsAlt } from \"react-icons/fa\";\nimport { CiText } from \"react-icons/ci\";\nimport { IoMdSend } from \"react-icons/io\";\nimport styled from \"styled-components\";\nimport Picker from \"emoji-picker-react\";\nimport { FaSyncAlt, FaTimes } from 'react-icons/fa';\nexport default function ChatInput(_ref) {\n  var handleSendMsg = _ref.handleSendMsg;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      msg = _useState2[0],\n      setMsg = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      showEmojiPicker = _useState4[0],\n      setShowEmojiPicker = _useState4[1];\n\n  var handleEmojiPickerhideShow = function handleEmojiPickerhideShow() {\n    setShowEmojiPicker(!showEmojiPicker);\n  };\n\n  var handleEmojiClick = function handleEmojiClick(event, emojiObject) {\n    var message = msg;\n    message += emojiObject.emoji;\n    setMsg(message);\n  };\n\n  var sendChat = function sendChat(event) {\n    event.preventDefault();\n\n    if (msg.length > 0) {\n      handleSendMsg(msg);\n      setMsg(\"\");\n    }\n  };\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      modal = _useState6[0],\n      setModal = _useState6[1];\n\n  var _useState7 = useState({}),\n      _useState8 = _slicedToArray(_useState7, 2),\n      modalData = _useState8[0],\n      setModalData = _useState8[1];\n\n  var toggleModal = function toggleModal() {\n    setModal(false);\n  };\n\n  var textProcessing = function textProcessing(title) {\n    if (true) {\n      var systemcontent = msg;\n\n      switch (title) {\n        case \"TRANSLATE\":\n          systemcontent = \"Please translate the given sentence into tamil \" + msg;\n          break;\n\n        case \"REPHRASE\":\n          systemcontent = \"You are chatting with a friend. Rephrase and correct the grammar and spelling of the following message as if you were sending it to a friend\";\n          break;\n\n        case \"SUMMARY\":\n          console.log(\"It's Wednesday!\");\n          break;\n\n        case \"EXPAND\":\n          systemcontent = \"You are helping me expand short and incomplete sentences into meaningful messages, up to 100 words, as if I'm chatting with a friend\";\n          break;\n\n        default:\n          console.log(\"It's the weekend!\");\n      } // Replace with your OpenAI API key\n\n\n      var apiKey = 'API KEY';\n      var apiUrl = 'https://api.openai.com/v1/chat/completions';\n      var requestData = {\n        model: 'gpt-3.5-turbo',\n        messages: [{\n          role: \"system\",\n          content: systemcontent\n        }, {\n          role: 'user',\n          content: msg\n        }],\n        temperature: 0.7\n      };\n      fetch(apiUrl, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': \"Bearer \".concat(apiKey)\n        },\n        body: JSON.stringify(requestData)\n      }).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        // Handle the API response data here\n        if (data.choices && data.choices.length > 0) {\n          var content = data.choices[0].message.content;\n\n          switch (title) {\n            case \"REPHRASE\":\n              setMsg(content);\n              break;\n\n            default:\n          }\n\n          setModalData({\n            title: title,\n            // Assuming your API response has a \"title\" field\n            content: data.choices[0].message.content // Assuming your API response has a \"content\" field\n\n          });\n          console.log(content);\n        } else {\n          console.log(\"Invalid API response or no choices found.\");\n          setModalData({\n            title: title,\n            // Assuming your API response has a \"title\" field\n            content: \"API not give respon please try again\" // Assuming your API response has a \"content\" field\n\n          });\n        }\n\n        console.log(\"data\", data);\n      }).catch(function (error) {\n        // Handle any errors that occur during the API request\n        setModalData({\n          title: title,\n          // Assuming your API response has a \"title\" field\n          content: \"exeption\" // Assuming your API response has a \"content\" field\n\n        });\n      });\n    }\n\n    setModal(true);\n  };\n\n  if (modal) {\n    document.body.classList.add('active-modal');\n  } else {\n    document.body.classList.remove('active-modal');\n  }\n\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"emoji\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(BsEmojiSmileFill, {\n    onClick: handleEmojiPickerhideShow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 11\n    }\n  }), showEmojiPicker && /*#__PURE__*/React.createElement(Picker, {\n    onEmojiClick: handleEmojiClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 31\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"emoji\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FaPencilAlt, {\n    onClick: function onClick() {\n      return textProcessing(\"REPHRASE\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"emoji\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CiText, {\n    onClick: function onClick() {\n      return textProcessing(\"TRANSLATE\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"emoji\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FaBook, {\n    onClick: function onClick() {\n      return textProcessing(\"SUMMARY\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"emoji\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FaExpandArrowsAlt, {\n    onClick: function onClick() {\n      return textProcessing(\"EXPAND\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      \"padding-left\": \"150px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"input-container\",\n    onSubmit: function onSubmit(event) {\n      return sendChat(event);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"type your message here\",\n    onChange: function onChange(e) {\n      return setMsg(e.target.value);\n    },\n    value: msg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IoMdSend, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 11\n    }\n  })))), modal && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"refresh-modal\",\n    onClick: function onClick() {\n      return textProcessing(modalData.title);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FaSyncAlt, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 15\n    }\n  }), \" \"), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }\n  }, modalData.title), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }\n  }, modalData.content), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"close-modal\",\n    onClick: toggleModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FaTimes, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 15\n    }\n  }), \" \"))));\n}\nvar Container = styled.div(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  display: grid;\\n  align-items: center;\\n  grid-template-columns: 5% 95%;\\n  background-color: #080420;\\n  padding: 0 2rem;\\n  @media screen and (min-width: 720px) and (max-width: 1080px) {\\n    padding: 0 1rem;\\n    gap: 1rem;\\n  }\\n  .button-container {\\n    display: flex;\\n    align-items: center;\\n    color: white;\\n    gap: 1rem;\\n    .emoji {\\n      position: relative;\\n      svg {\\n        font-size: 1.5rem;\\n        color: #ffff00c8;\\n        cursor: pointer;\\n      }\\n      .emoji-picker-react {\\n        position: absolute;\\n        top: -350px;\\n        background-color: #080420;\\n        box-shadow: 0 5px 10px #9a86f3;\\n        border-color: #9a86f3;\\n        .emoji-scroll-wrapper::-webkit-scrollbar {\\n          background-color: #080420;\\n          width: 5px;\\n          &-thumb {\\n            background-color: #9a86f3;\\n          }\\n        }\\n        .emoji-categories {\\n          button {\\n            filter: contrast(0);\\n          }\\n        }\\n        .emoji-search {\\n          background-color: transparent;\\n          border-color: #9a86f3;\\n        }\\n        .emoji-group:before {\\n          background-color: #080420;\\n        }\\n      }\\n    }\\n  }\\n  .input-container {\\n    width: 100%;\\n    border-radius: 2rem;\\n    display: flex;\\n    align-items: center;\\n    gap: 2rem;\\n    background-color: #ffffff34;\\n    input {\\n      width: 90%;\\n      height: 60%;\\n      background-color: transparent;\\n      color: white;\\n      border: none;\\n      padding-left: 1rem;\\n      font-size: 1.2rem;\\n\\n      &::selection {\\n        background-color: #9a86f3;\\n      }\\n      &:focus {\\n        outline: none;\\n      }\\n    }\\n    button {\\n      padding: 0.3rem 2rem;\\n      border-radius: 2rem;\\n      display: flex;\\n      justify-content: center;\\n      align-items: center;\\n      background-color: #9a86f3;\\n      border: none;\\n      @media screen and (min-width: 720px) and (max-width: 1080px) {\\n        padding: 0.3rem 1rem;\\n        svg {\\n          font-size: 1rem;\\n        }\\n      }\\n      svg {\\n        font-size: 2rem;\\n        color: white;\\n      }\\n    }\\n  }\\n\"])));","map":{"version":3,"sources":["D:/Projects/chat-genius-React/public/src/components/ChatInput.jsx"],"names":["React","useState","BsEmojiSmileFill","FaPencilAlt","FaBook","FaExpandArrowsAlt","CiText","IoMdSend","styled","Picker","FaSyncAlt","FaTimes","ChatInput","handleSendMsg","msg","setMsg","showEmojiPicker","setShowEmojiPicker","handleEmojiPickerhideShow","handleEmojiClick","event","emojiObject","message","emoji","sendChat","preventDefault","length","modal","setModal","modalData","setModalData","toggleModal","textProcessing","title","systemcontent","console","log","apiKey","apiUrl","requestData","model","messages","role","content","temperature","fetch","method","headers","body","JSON","stringify","then","response","json","data","choices","catch","error","document","classList","add","remove","e","target","value","Container","div"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { BsEmojiSmileFill } from \"react-icons/bs\";\r\nimport { FaPencilAlt } from 'react-icons/fa';\r\nimport { FaBook } from \"react-icons/fa\";\r\nimport { FaExpandArrowsAlt } from \"react-icons/fa\";\r\nimport { CiText} from \"react-icons/ci\";\r\nimport { IoMdSend } from \"react-icons/io\";\r\nimport styled from \"styled-components\";\r\nimport Picker from \"emoji-picker-react\";\r\nimport { FaSyncAlt, FaTimes } from 'react-icons/fa';\r\n\r\n\r\n\r\nexport default function ChatInput({ handleSendMsg }) {\r\n  const [msg, setMsg] = useState(\"\");\r\n  const [showEmojiPicker, setShowEmojiPicker] = useState(false);\r\n  const handleEmojiPickerhideShow = () => {\r\n    setShowEmojiPicker(!showEmojiPicker);\r\n  };\r\n\r\n  const handleEmojiClick = (event, emojiObject) => {\r\n    let message = msg;\r\n    message += emojiObject.emoji;\r\n    setMsg(message);\r\n  };\r\n\r\n  const sendChat = (event) => {\r\n    event.preventDefault();\r\n    if (msg.length > 0) {\r\n      handleSendMsg(msg);\r\n      setMsg(\"\");\r\n    }\r\n  };\r\n  const [modal, setModal] = useState(false);\r\n  const [modalData, setModalData] = useState({});\r\n\r\n  const toggleModal = () => {\r\n    setModal(false);\r\n  }\r\n  const textProcessing = (title) => {\r\n\r\n    if(true)\r\n    {\r\n      let systemcontent=msg;\r\n      switch (title) {\r\n        case \"TRANSLATE\":\r\n          systemcontent=\"Please translate the given sentence into tamil \"+msg;\r\n          break;\r\n        case \"REPHRASE\":\r\n          systemcontent=\"You are chatting with a friend. Rephrase and correct the grammar and spelling of the following message as if you were sending it to a friend\";\r\n          break;\r\n        case \"SUMMARY\":\r\n          console.log(\"It's Wednesday!\");\r\n          break;\r\n        case \"EXPAND\":\r\n          systemcontent=\"You are helping me expand short and incomplete sentences into meaningful messages, up to 100 words, as if I'm chatting with a friend\";\r\n          break;\r\n        default:\r\n          console.log(\"It's the weekend!\");\r\n      }\r\n      // Replace with your OpenAI API key\r\n      const apiKey = 'API KEY'\r\n      const apiUrl = 'https://api.openai.com/v1/chat/completions';\r\n      const requestData = {\r\n        model: 'gpt-3.5-turbo',\r\n        messages: [\r\n          {role: \"system\", content: systemcontent},\r\n          { role: 'user', content: msg }],\r\n        temperature: 0.7,\r\n      };\r\n      fetch(apiUrl, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${apiKey}`,\r\n        },\r\n        body: JSON.stringify(requestData),\r\n      })\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          // Handle the API response data here\r\n          if (data.choices && data.choices.length > 0) {\r\n            const content = data.choices[0].message.content;\r\n            switch (title) {\r\n              case \"REPHRASE\":\r\n                setMsg(content);\r\n                break;\r\n              default:\r\n            }\r\n            setModalData({\r\n              title: title, // Assuming your API response has a \"title\" field\r\n              content: data.choices[0].message.content, // Assuming your API response has a \"content\" field\r\n            });\r\n            console.log(content);\r\n          } else {\r\n            console.log(\"Invalid API response or no choices found.\");\r\n            setModalData({\r\n              title: title, // Assuming your API response has a \"title\" field\r\n              content: \"API not give respon please try again\", // Assuming your API response has a \"content\" field\r\n            });\r\n          }\r\n          console.log(\"data\",data);\r\n        })\r\n        .catch((error) => {\r\n          // Handle any errors that occur during the API request\r\n          setModalData({\r\n            title: title, // Assuming your API response has a \"title\" field\r\n            content: \"exeption\", // Assuming your API response has a \"content\" field\r\n          });\r\n        });\r\n    }\r\n    setModal(true);\r\n  };\r\n\r\n  if(modal) {\r\n    document.body.classList.add('active-modal')\r\n  } else {\r\n    document.body.classList.remove('active-modal')\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <div className=\"button-container\">\r\n        <div className=\"emoji\">\r\n          <BsEmojiSmileFill onClick={handleEmojiPickerhideShow} />\r\n          {showEmojiPicker && <Picker onEmojiClick={handleEmojiClick} />}\r\n        </div>\r\n        <div className=\"emoji\">\r\n          <FaPencilAlt onClick={() => textProcessing(\"REPHRASE\")}/>\r\n        </div>\r\n        <div className=\"emoji\">\r\n          <CiText onClick={() => textProcessing(\"TRANSLATE\")} />\r\n        </div>\r\n        <div className=\"emoji\">\r\n        <FaBook onClick={() => textProcessing(\"SUMMARY\")} />\r\n        </div>\r\n        <div className=\"emoji\">\r\n          <FaExpandArrowsAlt onClick={() => textProcessing(\"EXPAND\")}/>\r\n        </div>\r\n      </div>\r\n      <div style={{\"padding-left\":\"150px\"}}>\r\n      <form className=\"input-container\" onSubmit={(event) => sendChat(event)}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"type your message here\"\r\n          onChange={(e) => setMsg(e.target.value)}\r\n          value={msg}\r\n        />\r\n        <button type=\"submit\">\r\n          <IoMdSend />\r\n        </button>\r\n      </form>\r\n      </div>\r\n      {modal && (\r\n        <div className=\"modal\">\r\n          <div className=\"modal-content\">\r\n            <button className=\"refresh-modal\" onClick={() => textProcessing(modalData.title)}>\r\n              <FaSyncAlt /> {/* React Icons \"Refresh\" icon */}\r\n            </button>\r\n            <h2>{modalData.title}</h2>\r\n            <p>\r\n              {modalData.content}\r\n            </p>\r\n            <button className=\"close-modal\" onClick={toggleModal}>\r\n              <FaTimes /> {/* React Icons \"Close\" icon */}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst Container = styled.div`\r\n  display: grid;\r\n  align-items: center;\r\n  grid-template-columns: 5% 95%;\r\n  background-color: #080420;\r\n  padding: 0 2rem;\r\n  @media screen and (min-width: 720px) and (max-width: 1080px) {\r\n    padding: 0 1rem;\r\n    gap: 1rem;\r\n  }\r\n  .button-container {\r\n    display: flex;\r\n    align-items: center;\r\n    color: white;\r\n    gap: 1rem;\r\n    .emoji {\r\n      position: relative;\r\n      svg {\r\n        font-size: 1.5rem;\r\n        color: #ffff00c8;\r\n        cursor: pointer;\r\n      }\r\n      .emoji-picker-react {\r\n        position: absolute;\r\n        top: -350px;\r\n        background-color: #080420;\r\n        box-shadow: 0 5px 10px #9a86f3;\r\n        border-color: #9a86f3;\r\n        .emoji-scroll-wrapper::-webkit-scrollbar {\r\n          background-color: #080420;\r\n          width: 5px;\r\n          &-thumb {\r\n            background-color: #9a86f3;\r\n          }\r\n        }\r\n        .emoji-categories {\r\n          button {\r\n            filter: contrast(0);\r\n          }\r\n        }\r\n        .emoji-search {\r\n          background-color: transparent;\r\n          border-color: #9a86f3;\r\n        }\r\n        .emoji-group:before {\r\n          background-color: #080420;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  .input-container {\r\n    width: 100%;\r\n    border-radius: 2rem;\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 2rem;\r\n    background-color: #ffffff34;\r\n    input {\r\n      width: 90%;\r\n      height: 60%;\r\n      background-color: transparent;\r\n      color: white;\r\n      border: none;\r\n      padding-left: 1rem;\r\n      font-size: 1.2rem;\r\n\r\n      &::selection {\r\n        background-color: #9a86f3;\r\n      }\r\n      &:focus {\r\n        outline: none;\r\n      }\r\n    }\r\n    button {\r\n      padding: 0.3rem 2rem;\r\n      border-radius: 2rem;\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n      background-color: #9a86f3;\r\n      border: none;\r\n      @media screen and (min-width: 720px) and (max-width: 1080px) {\r\n        padding: 0.3rem 1rem;\r\n        svg {\r\n          font-size: 1rem;\r\n        }\r\n      }\r\n      svg {\r\n        font-size: 2rem;\r\n        color: white;\r\n      }\r\n    }\r\n  }\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}